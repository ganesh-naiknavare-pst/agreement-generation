generator db {
provider = "prisma-client-py"
interface = "asyncio"
recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agreement {
  id               Int             @id @default(autoincrement())
  createdAt        DateTime        @default(now())
  status           AgreementStatus @default(PROCESSING)
  pdf              Bytes?
  address          String
  city             String
  rentAmount       Int
  agreementPeriod  DateTime[]
  owner            Owner[]
  tenants          Tenant[]
}

model Owner {
  id            Int         @id @default(autoincrement())
  agreementId   Int
  name          String
  email         String
  createdAt     DateTime    @default(now())
  agreement     Agreement   @relation(fields: [agreementId], references: [id])
}

model Tenant {
  id            Int         @id @default(autoincrement())
  agreementId   Int
  name          String
  email         String
  createdAt     DateTime    @default(now())
  agreement     Agreement   @relation(fields: [agreementId], references: [id])
}

model UserRentAgreementStatus {
  id                              Int                 @id @default(autoincrement())
  userId                          String
  agreementId                     Int
  status                          AgreementStatus     @default(PROCESSING)
  @@unique([agreementId, userId])
}

enum AgreementStatus {
  APPROVED
  PROCESSING
  REJECTED
}

model TemplateAgreement {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  status        AgreementStatus @default(PROCESSING)
  pdf           Bytes?
  authority     Authority[]
  participant   Participant[]
}

model Authority {
  id            Int                 @id @default(autoincrement())
  agreementId   Int
  email         String
  createdAt     DateTime            @default(now())
  agreement     TemplateAgreement   @relation(fields: [agreementId], references: [id])
}

model Participant {
  id            Int                 @id @default(autoincrement())
  agreementId   Int
  email         String
  createdAt     DateTime            @default(now())
  agreement     TemplateAgreement   @relation(fields: [agreementId], references: [id])
}

model UserAgreementStatus {
  id                                Int                 @id @default(autoincrement())
  userId                            String
  agreementId                       Int
  status                            AgreementStatus     @default(PROCESSING)
  @@unique([agreementId, userId])
}
